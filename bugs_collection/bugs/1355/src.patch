diff --git a/buggy/clients/unshaded/src/main/java/tachyon/client/AbstractTachyonFS.java b/fixed/clients/unshaded/src/main/java/tachyon/client/AbstractTachyonFS.java
index d795076..7db70e5 100644
--- a/buggy/clients/unshaded/src/main/java/tachyon/client/AbstractTachyonFS.java
+++ b/fixed/clients/unshaded/src/main/java/tachyon/client/AbstractTachyonFS.java
@@ -44,7 +44,7 @@ abstract class AbstractTachyonFS implements TachyonFSCore {
    * @return The unique file id. It returns -1 if the creation failed.
    * @throws IOException if the operation fails
    */
-  public synchronized int createFile(TachyonURI path) throws IOException {
+  public synchronized long createFile(TachyonURI path) throws IOException {
     long defaultBlockSize = mTachyonConf.getBytes(Constants.USER_DEFAULT_BLOCK_SIZE_BYTE);
     return createFile(path, defaultBlockSize);
   }
@@ -59,7 +59,7 @@ abstract class AbstractTachyonFS implements TachyonFSCore {
    * @return The unique file id. It returns -1 if the creation failed.
    * @throws IOException if the operation fails
    */
-  public synchronized int createFile(TachyonURI path, long blockSizeByte) throws IOException {
+  public synchronized long createFile(TachyonURI path, long blockSizeByte) throws IOException {
     if (blockSizeByte > (long) Constants.GB * 2) {
       throw new IOException("Block size must be less than 2GB: " + blockSizeByte);
     }
@@ -78,7 +78,7 @@ abstract class AbstractTachyonFS implements TachyonFSCore {
    * @return The unique file id. It returns -1 if the creation failed.
    * @throws IOException if the operation fails
    */
-  public synchronized int createFile(TachyonURI path, TachyonURI ufsPath) throws IOException {
+  public synchronized long createFile(TachyonURI path, TachyonURI ufsPath) throws IOException {
     return createFile(path, ufsPath, -1, true);
   }
 
