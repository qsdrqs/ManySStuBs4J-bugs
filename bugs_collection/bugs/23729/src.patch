diff --git a/buggy/samples/server/petstore/springboot-delegate-j8/src/main/java/io/swagger/api/PetApiController.java b/fixed/samples/server/petstore/springboot-delegate-j8/src/main/java/io/swagger/api/PetApiController.java
index c4099e569..b961553a9 100644
--- a/buggy/samples/server/petstore/springboot-delegate-j8/src/main/java/io/swagger/api/PetApiController.java
+++ b/fixed/samples/server/petstore/springboot-delegate-j8/src/main/java/io/swagger/api/PetApiController.java
@@ -36,12 +36,12 @@ public class PetApiController implements PetApi {
     }
 
     public ResponseEntity<Void> deletePet(@ApiParam(value = "Pet id to delete",required=true ) @PathVariable("petId") Long petId,
-        @ApiParam(value = ""  ) @RequestHeader(value="api_key", required=false) String apiKey) {
+        @ApiParam(value = "" ) @RequestHeader(value="api_key", required=false) String apiKey) {
         // do some magic!
         return delegate.deletePet(petId, apiKey);
     }
 
-    public ResponseEntity<List<Pet>> findPetsByStatus( @NotNull @ApiParam(value = "Status values that need to be considered for filter", required = true, allowableValues = "AVAILABLE, PENDING, SOLD") @RequestParam(value = "status", required = true) List<String> status) {
+    public ResponseEntity<List<Pet>> findPetsByStatus( @NotNull @ApiParam(value = "Status values that need to be considered for filter", required = true, allowableValues = "available, pending, sold") @RequestParam(value = "status", required = true) List<String> status) {
         // do some magic!
         return delegate.findPetsByStatus(status);
     }
@@ -62,14 +62,14 @@ public class PetApiController implements PetApi {
     }
 
     public ResponseEntity<Void> updatePetWithForm(@ApiParam(value = "ID of pet that needs to be updated",required=true ) @PathVariable("petId") Long petId,
-        @ApiParam(value = "Updated name of the pet" ) @RequestPart(value="name", required=false)  String name,
-        @ApiParam(value = "Updated status of the pet" ) @RequestPart(value="status", required=false)  String status) {
+        @ApiParam(value = "Updated name of the pet") @RequestPart(value="name", required=false)  String name,
+        @ApiParam(value = "Updated status of the pet") @RequestPart(value="status", required=false)  String status) {
         // do some magic!
         return delegate.updatePetWithForm(petId, name, status);
     }
 
     public ResponseEntity<ModelApiResponse> uploadFile(@ApiParam(value = "ID of pet to update",required=true ) @PathVariable("petId") Long petId,
-        @ApiParam(value = "Additional data to pass to server" ) @RequestPart(value="additionalMetadata", required=false)  String additionalMetadata,
+        @ApiParam(value = "Additional data to pass to server") @RequestPart(value="additionalMetadata", required=false)  String additionalMetadata,
         @ApiParam(value = "file detail") @RequestPart("file") MultipartFile file) {
         // do some magic!
         return delegate.uploadFile(petId, additionalMetadata, file);
