diff --git a/buggy/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java b/fixed/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java
index 5c5ab4a33..255eaf87d 100644
--- a/buggy/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java
+++ b/fixed/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java
@@ -106,7 +106,8 @@ public class AutoConfigurationReportLoggingInitializer implements
 	public void logAutoConfigurationReport(boolean isCrashReport) {
 		if (this.report == null) {
 			if (this.applicationContext == null) {
-				this.logger.info("Nothing to report: ApplicationContext not available");
+				this.logger.info("Unable to provide auto-configuration report "
+						+ "due to missing ApplicationContext");
 				return;
 			}
 			this.report = AutoConfigurationReport.get(this.applicationContext
@@ -114,10 +115,11 @@ public class AutoConfigurationReportLoggingInitializer implements
 		}
 		if (this.report.getConditionAndOutcomesBySource().size() > 0) {
 			if (isCrashReport && this.logger.isInfoEnabled()) {
-				this.logger.info(getLogMessage(this.report
-						.getConditionAndOutcomesBySource()));
+				this.logger.info("\n\nError starting ApplicationContext. "
+						+ "To display the auto-configuration report enabled "
+						+ "debug logging (start with --debug)\n\n");
 			}
-			else if (!isCrashReport && this.logger.isDebugEnabled()) {
+			if (this.logger.isDebugEnabled()) {
 				this.logger.debug(getLogMessage(this.report
 						.getConditionAndOutcomesBySource()));
 			}
