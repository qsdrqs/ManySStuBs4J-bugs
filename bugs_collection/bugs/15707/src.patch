diff --git a/buggy/guava-tests/test/com/google/common/collect/LinkedListMultimapTest.java b/fixed/guava-tests/test/com/google/common/collect/LinkedListMultimapTest.java
index ffa2435a2..d288684ce 100644
--- a/buggy/guava-tests/test/com/google/common/collect/LinkedListMultimapTest.java
+++ b/fixed/guava-tests/test/com/google/common/collect/LinkedListMultimapTest.java
@@ -362,7 +362,7 @@ public class LinkedListMultimapTest extends AbstractListMultimapTest {
   }
 
   @SuppressWarnings("unchecked")
-  @GwtIncompatible("unreasonable slow")
+  @GwtIncompatible("unreasonably slow")
   public void testEntriesIteration() {
     List<Entry<String, Integer>> addItems = ImmutableList.of(
         Maps.immutableEntry("foo", 99),
@@ -395,7 +395,7 @@ public class LinkedListMultimapTest extends AbstractListMultimapTest {
     }
   }
 
-  @GwtIncompatible("unreasonable slow")
+  @GwtIncompatible("unreasonably slow")
   public void testKeysIteration() {
     new IteratorTester<String>(6, MODIFIABLE, newArrayList("foo", "foo", "bar",
         "bar", "foo"), IteratorTester.KnownOrder.KNOWN_ORDER) {
@@ -415,7 +415,7 @@ public class LinkedListMultimapTest extends AbstractListMultimapTest {
     }.test();
   }
 
-  @GwtIncompatible("unreasonable slow")
+  @GwtIncompatible("unreasonably slow")
   public void testValuesIteration() {
     List<Integer> addItems = ImmutableList.of(99, 88, 77);
 
@@ -441,7 +441,7 @@ public class LinkedListMultimapTest extends AbstractListMultimapTest {
     }
   }
 
-  @GwtIncompatible("unreasonable slow")
+  @GwtIncompatible("unreasonably slow")
   public void testKeySetIteration() {
     new IteratorTester<String>(6, MODIFIABLE, newLinkedHashSet(asList(
         "foo", "bar", "baz", "dog", "cat")),
@@ -467,7 +467,7 @@ public class LinkedListMultimapTest extends AbstractListMultimapTest {
   }
 
   @SuppressWarnings("unchecked")
-  @GwtIncompatible("unreasonable slow")
+  @GwtIncompatible("unreasonably slow")
   public void testAsSetIteration() {
     Set<Entry<String, Collection<Integer>>> set = Sets.newLinkedHashSet(asList(
         Maps.immutableEntry("foo",
