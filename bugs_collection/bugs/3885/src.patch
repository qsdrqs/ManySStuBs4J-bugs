diff --git a/buggy/runtime-testsuite/test/org/antlr/v4/test/runtime/javascript/node/TestLeftRecursion.java b/fixed/runtime-testsuite/test/org/antlr/v4/test/runtime/javascript/node/TestLeftRecursion.java
index 2b392fc..eddcbff 100644
--- a/buggy/runtime-testsuite/test/org/antlr/v4/test/runtime/javascript/node/TestLeftRecursion.java
+++ b/fixed/runtime-testsuite/test/org/antlr/v4/test/runtime/javascript/node/TestLeftRecursion.java
@@ -1635,7 +1635,7 @@ public class TestLeftRecursion extends BaseTest {
 	@Test
 	public void testMultipleActionsPredicatesOptions_1() throws Exception {
 		mkdir(tmpdir);
-		StringBuilder grammarBuilder = new StringBuilder(246);
+		StringBuilder grammarBuilder = new StringBuilder(245);
 		grammarBuilder.append("grammar T;\n");
 		grammarBuilder.append("s @after {console.log($ctx.toStringTree(null, this));} : e ;\n");
 		grammarBuilder.append("e : a=e op=('*'|'/') b=e  {}{true}?\n");
@@ -1644,7 +1644,7 @@ public class TestLeftRecursion extends BaseTest {
 		grammarBuilder.append("  | '(' x=e ')' {}{}\n");
 		grammarBuilder.append("  ;\n");
 		grammarBuilder.append("INT : '0'..'9'+ ;\n");
-		grammarBuilder.append("WS : (' '|'\\n') -> skip ;");
+		grammarBuilder.append("WS : (' '|'\\n') -> skip;");
 		String grammar = grammarBuilder.toString();
 		String input ="4";
 		String found = execParser("T.g4", grammar, "TParser", "TLexer",
@@ -1658,7 +1658,7 @@ public class TestLeftRecursion extends BaseTest {
 	@Test
 	public void testMultipleActionsPredicatesOptions_2() throws Exception {
 		mkdir(tmpdir);
-		StringBuilder grammarBuilder = new StringBuilder(246);
+		StringBuilder grammarBuilder = new StringBuilder(245);
 		grammarBuilder.append("grammar T;\n");
 		grammarBuilder.append("s @after {console.log($ctx.toStringTree(null, this));} : e ;\n");
 		grammarBuilder.append("e : a=e op=('*'|'/') b=e  {}{true}?\n");
@@ -1667,7 +1667,7 @@ public class TestLeftRecursion extends BaseTest {
 		grammarBuilder.append("  | '(' x=e ')' {}{}\n");
 		grammarBuilder.append("  ;\n");
 		grammarBuilder.append("INT : '0'..'9'+ ;\n");
-		grammarBuilder.append("WS : (' '|'\\n') -> skip ;");
+		grammarBuilder.append("WS : (' '|'\\n') -> skip;");
 		String grammar = grammarBuilder.toString();
 		String input ="1*2/3";
 		String found = execParser("T.g4", grammar, "TParser", "TLexer",
@@ -1681,7 +1681,7 @@ public class TestLeftRecursion extends BaseTest {
 	@Test
 	public void testMultipleActionsPredicatesOptions_3() throws Exception {
 		mkdir(tmpdir);
-		StringBuilder grammarBuilder = new StringBuilder(246);
+		StringBuilder grammarBuilder = new StringBuilder(245);
 		grammarBuilder.append("grammar T;\n");
 		grammarBuilder.append("s @after {console.log($ctx.toStringTree(null, this));} : e ;\n");
 		grammarBuilder.append("e : a=e op=('*'|'/') b=e  {}{true}?\n");
@@ -1690,7 +1690,7 @@ public class TestLeftRecursion extends BaseTest {
 		grammarBuilder.append("  | '(' x=e ')' {}{}\n");
 		grammarBuilder.append("  ;\n");
 		grammarBuilder.append("INT : '0'..'9'+ ;\n");
-		grammarBuilder.append("WS : (' '|'\\n') -> skip ;");
+		grammarBuilder.append("WS : (' '|'\\n') -> skip;");
 		String grammar = grammarBuilder.toString();
 		String input ="(1/2)*3";
 		String found = execParser("T.g4", grammar, "TParser", "TLexer",
@@ -1770,7 +1770,7 @@ public class TestLeftRecursion extends BaseTest {
 	@Test
 	public void testMultipleAlternativesWithCommonLabel_1() throws Exception {
 		mkdir(tmpdir);
-		StringBuilder grammarBuilder = new StringBuilder(639);
+		StringBuilder grammarBuilder = new StringBuilder(638);
 		grammarBuilder.append("grammar T;\n");
 		grammarBuilder.append("s : e {console.log($e.v);};\n");
 		grammarBuilder.append("e returns [int v]\n");
@@ -1786,7 +1786,7 @@ public class TestLeftRecursion extends BaseTest {
 		grammarBuilder.append("INT : '0'..'9'+ ;\n");
 		grammarBuilder.append("INC : '++' ;\n");
 		grammarBuilder.append("DEC : '--' ;\n");
-		grammarBuilder.append("WS : (' '|'\\n') -> skip ;");
+		grammarBuilder.append("WS : (' '|'\\n') -> skip;");
 		String grammar = grammarBuilder.toString();
 		String input ="4";
 		String found = execParser("T.g4", grammar, "TParser", "TLexer",
@@ -1800,7 +1800,7 @@ public class TestLeftRecursion extends BaseTest {
 	@Test
 	public void testMultipleAlternativesWithCommonLabel_2() throws Exception {
 		mkdir(tmpdir);
-		StringBuilder grammarBuilder = new StringBuilder(639);
+		StringBuilder grammarBuilder = new StringBuilder(638);
 		grammarBuilder.append("grammar T;\n");
 		grammarBuilder.append("s : e {console.log($e.v);};\n");
 		grammarBuilder.append("e returns [int v]\n");
@@ -1816,7 +1816,7 @@ public class TestLeftRecursion extends BaseTest {
 		grammarBuilder.append("INT : '0'..'9'+ ;\n");
 		grammarBuilder.append("INC : '++' ;\n");
 		grammarBuilder.append("DEC : '--' ;\n");
-		grammarBuilder.append("WS : (' '|'\\n') -> skip ;");
+		grammarBuilder.append("WS : (' '|'\\n') -> skip;");
 		String grammar = grammarBuilder.toString();
 		String input ="1+2";
 		String found = execParser("T.g4", grammar, "TParser", "TLexer",
@@ -1830,7 +1830,7 @@ public class TestLeftRecursion extends BaseTest {
 	@Test
 	public void testMultipleAlternativesWithCommonLabel_3() throws Exception {
 		mkdir(tmpdir);
-		StringBuilder grammarBuilder = new StringBuilder(639);
+		StringBuilder grammarBuilder = new StringBuilder(638);
 		grammarBuilder.append("grammar T;\n");
 		grammarBuilder.append("s : e {console.log($e.v);};\n");
 		grammarBuilder.append("e returns [int v]\n");
@@ -1846,7 +1846,7 @@ public class TestLeftRecursion extends BaseTest {
 		grammarBuilder.append("INT : '0'..'9'+ ;\n");
 		grammarBuilder.append("INC : '++' ;\n");
 		grammarBuilder.append("DEC : '--' ;\n");
-		grammarBuilder.append("WS : (' '|'\\n') -> skip ;");
+		grammarBuilder.append("WS : (' '|'\\n') -> skip;");
 		String grammar = grammarBuilder.toString();
 		String input ="1+2*3";
 		String found = execParser("T.g4", grammar, "TParser", "TLexer",
@@ -1860,7 +1860,7 @@ public class TestLeftRecursion extends BaseTest {
 	@Test
 	public void testMultipleAlternativesWithCommonLabel_4() throws Exception {
 		mkdir(tmpdir);
-		StringBuilder grammarBuilder = new StringBuilder(639);
+		StringBuilder grammarBuilder = new StringBuilder(638);
 		grammarBuilder.append("grammar T;\n");
 		grammarBuilder.append("s : e {console.log($e.v);};\n");
 		grammarBuilder.append("e returns [int v]\n");
@@ -1876,7 +1876,7 @@ public class TestLeftRecursion extends BaseTest {
 		grammarBuilder.append("INT : '0'..'9'+ ;\n");
 		grammarBuilder.append("INC : '++' ;\n");
 		grammarBuilder.append("DEC : '--' ;\n");
-		grammarBuilder.append("WS : (' '|'\\n') -> skip ;");
+		grammarBuilder.append("WS : (' '|'\\n') -> skip;");
 		String grammar = grammarBuilder.toString();
 		String input ="i++*3";
 		String found = execParser("T.g4", grammar, "TParser", "TLexer",
