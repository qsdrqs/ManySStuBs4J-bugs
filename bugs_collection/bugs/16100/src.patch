diff --git a/buggy/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java b/fixed/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java
index f1f9fe105..db6a40e6c 100644
--- a/buggy/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java
+++ b/fixed/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java
@@ -335,7 +335,7 @@ public class ClientConnectionManagerImpl implements ClientConnectionManager {
 
     private AuthenticationFuture triggerConnect(Address target, boolean asOwner) {
         if (!alive) {
-            throw new HazelcastException("ConnectionManager is not active!!!");
+            throw new HazelcastException("ConnectionManager is not active!");
         }
 
         AuthenticationFuture callback = new AuthenticationFuture();
@@ -355,7 +355,7 @@ public class ClientConnectionManagerImpl implements ClientConnectionManager {
 
     protected ClientConnection createSocketConnection(final Address address) throws IOException {
         if (!alive) {
-            throw new HazelcastException("ConnectionManager is not active!!!");
+            throw new HazelcastException("ConnectionManager is not active!");
         }
         SocketChannel socketChannel = null;
         try {
@@ -560,10 +560,10 @@ public class ClientConnectionManagerImpl implements ClientConnectionManager {
                         callback.onSuccess(connection, asOwner);
                         break;
                     case CREDENTIALS_FAILED:
-                        onFailure(new AuthenticationException("Invalid credentials! Principal :" + principal));
+                        onFailure(new AuthenticationException("Invalid credentials! Principal: " + principal));
                         break;
                     default:
-                        onFailure(new AuthenticationException("Authentication status code not supported. status:"
+                        onFailure(new AuthenticationException("Authentication status code not supported. status: "
                                 + authenticationStatus));
                 }
             }
