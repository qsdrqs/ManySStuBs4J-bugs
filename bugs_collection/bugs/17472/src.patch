diff --git a/buggy/junit/tests/runner/TestCaseClassLoaderTest.java b/fixed/junit/tests/runner/TestCaseClassLoaderTest.java
index 774a5ffac..ba85bd206 100644
--- a/buggy/junit/tests/runner/TestCaseClassLoaderTest.java
+++ b/fixed/junit/tests/runner/TestCaseClassLoaderTest.java
@@ -8,7 +8,7 @@ import java.net.URL;
 /**
  * A TestCase for testing the TestCaseClassLoader
  *
- */ 
+ */
 public class TestCaseClassLoaderTest extends TestCase {
 
 	public TestCaseClassLoaderTest(String name) {
@@ -17,13 +17,13 @@ public class TestCaseClassLoaderTest extends TestCase {
 	public void testClassLoading() throws Exception {
 		TestCaseClassLoader loader= new TestCaseClassLoader();
 		Class loadedClass= loader.loadClass("junit.tests.runner.ClassLoaderTest", true);
-		Object o= loadedClass.newInstance();			
+		Object o= loadedClass.newInstance();
 		//
 		// Invoke the assertClassLoaders method via reflection.
 		// We use reflection since the class is loaded by
 		// another class loader and we can't do a successfull downcast to
 		// ClassLoaderTestCase.
-		// 
+		//
 		Method method= loadedClass.getDeclaredMethod("verify", new Class[0]);
 		method.invoke(o, new Class[0]);
 	}
@@ -33,14 +33,14 @@ public class TestCaseClassLoaderTest extends TestCase {
 		assertNotNull("Cannot find test.jar", url);
 		String path= url.getFile();
 		TestCaseClassLoader loader= new TestCaseClassLoader(path);
-		Class loadedClass= loader.loadClass("junit.tests.LoadedFromJar", true);
-		Object o= loadedClass.newInstance();			
+		Class loadedClass= loader.loadClass("junit.tests.runner.LoadedFromJar", true);
+		Object o= loadedClass.newInstance();
 		//
 		// Invoke the assertClassLoaders method via reflection.
 		// We use reflection since the class is loaded by
 		// another class loader and we can't do a successfull downcast to
 		// ClassLoaderTestCase.
-		// 
+		//
 		Method method= loadedClass.getDeclaredMethod("verify", new Class[0]);
 		method.invoke(o, new Class[0]);
 	}
