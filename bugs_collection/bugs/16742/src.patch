diff --git a/buggy/hazelcast/src/main/java/com/hazelcast/nio/serialization/DefaultPortableWriter.java b/fixed/hazelcast/src/main/java/com/hazelcast/nio/serialization/DefaultPortableWriter.java
index 1cf79a750..440e595e8 100644
--- a/buggy/hazelcast/src/main/java/com/hazelcast/nio/serialization/DefaultPortableWriter.java
+++ b/fixed/hazelcast/src/main/java/com/hazelcast/nio/serialization/DefaultPortableWriter.java
@@ -112,12 +112,12 @@ public class DefaultPortableWriter implements PortableWriter {
 
     private void checkPortableAttributes(FieldDefinition fd, Portable portable) {
         if (fd.getFactoryId() != portable.getFactoryId()) {
-            throw new HazelcastSerializationException("Wrong Portable type! Generic portable types are not supported!" +
-                    " Expected factory-id: " + fd.getFactoryId() + ", Actual factory-id: " + portable.getFactoryId());
+            throw new HazelcastSerializationException("Wrong Portable type! Generic portable types are not supported! "
+                    + " Expected factory-id: " + fd.getFactoryId() + ", Actual factory-id: " + portable.getFactoryId());
         }
         if (fd.getClassId() != portable.getClassId()) {
-            throw new HazelcastSerializationException("Wrong Portable type! Generic portable types are not supported!" +
-                    " Expected class-id: " + fd.getClassId() + ", Actual class-id: " + portable.getClassId());
+            throw new HazelcastSerializationException("Wrong Portable type! Generic portable types are not supported! "
+                    + "Expected class-id: " + fd.getClassId() + ", Actual class-id: " + portable.getClassId());
         }
     }
 
