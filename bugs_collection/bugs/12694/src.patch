diff --git a/buggy/sql/src/main/java/io/druid/sql/calcite/rel/QueryMaker.java b/fixed/sql/src/main/java/io/druid/sql/calcite/rel/QueryMaker.java
index 220b05495..5cbf91d4b 100644
--- a/buggy/sql/src/main/java/io/druid/sql/calcite/rel/QueryMaker.java
+++ b/fixed/sql/src/main/java/io/druid/sql/calcite/rel/QueryMaker.java
@@ -366,7 +366,7 @@ public class QueryMaker
       return ColumnMetaData.Rep.of(Integer.class);
     } else if (sqlType == SqlTypeName.BIGINT) {
       return ColumnMetaData.Rep.of(Long.class);
-    } else if (sqlType == SqlTypeName.FLOAT || sqlType == SqlTypeName.DOUBLE) {
+    } else if (sqlType == SqlTypeName.FLOAT || sqlType == SqlTypeName.DOUBLE || sqlType == SqlTypeName.DECIMAL) {
       return ColumnMetaData.Rep.of(Double.class);
     } else if (sqlType == SqlTypeName.OTHER) {
       return ColumnMetaData.Rep.of(Object.class);
@@ -435,7 +435,7 @@ public class QueryMaker
       } else {
         throw new ISE("Cannot coerce[%s] to %s", value.getClass().getName(), sqlType);
       }
-    } else if (sqlType == SqlTypeName.FLOAT || sqlType == SqlTypeName.DOUBLE) {
+    } else if (sqlType == SqlTypeName.FLOAT || sqlType == SqlTypeName.DOUBLE || sqlType == SqlTypeName.DECIMAL) {
       if (value instanceof String) {
         coercedValue = Doubles.tryParse((String) value);
       } else if (value instanceof Number) {
