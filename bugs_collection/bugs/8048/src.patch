diff --git a/buggy/flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/hashtable/LongHybridHashTable.java b/fixed/flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/hashtable/LongHybridHashTable.java
index 117d5a64c..a37b7ece6 100644
--- a/buggy/flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/hashtable/LongHybridHashTable.java
+++ b/fixed/flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/hashtable/LongHybridHashTable.java
@@ -206,7 +206,11 @@ public abstract class LongHybridHashTable extends BaseHybridHashTable {
 		}
 
 		long range = maxKey - minKey + 1;
-		if (range <= recordCount * 4 || range <= segmentSize / 8) {
+
+		// 1.range is negative mean: range is to big to overflow
+		// 2.range is zero, maybe the max is Long.Max, and the min is Long.Min,
+		// so we should not use dense mode too.
+		if (range > 0 && (range <= recordCount * 4 || range <= segmentSize / 8)) {
 
 			// try to request memory.
 			int buffers = (int) Math.ceil(((double) (range * 8)) / segmentSize);
