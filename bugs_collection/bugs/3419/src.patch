diff --git a/buggy/src/main/java/com/alibaba/druid/proxy/jdbc/PreparedStatementProxyImpl.java b/fixed/src/main/java/com/alibaba/druid/proxy/jdbc/PreparedStatementProxyImpl.java
index ded1173..33a04b0 100644
--- a/buggy/src/main/java/com/alibaba/druid/proxy/jdbc/PreparedStatementProxyImpl.java
+++ b/fixed/src/main/java/com/alibaba/druid/proxy/jdbc/PreparedStatementProxyImpl.java
@@ -87,23 +87,23 @@ public class PreparedStatementProxyImpl extends StatementProxyImpl implements Pr
     @Override
     public boolean execute() throws SQLException {
         updateCount = null;
-    	lastExecuteType = StatementExecuteType.Execute;
-    	firstResultSet = createChain().preparedStatement_execute(this);
-    	return firstResultSet;
+        lastExecuteType = StatementExecuteType.Execute;
+        firstResultSet = createChain().preparedStatement_execute(this);
+        return firstResultSet;
     }
 
     @Override
     public ResultSet executeQuery() throws SQLException {
         updateCount = null;
-    	lastExecuteType = StatementExecuteType.ExecuteQuery;
+        lastExecuteType = StatementExecuteType.ExecuteQuery;
         return createChain().preparedStatement_executeQuery(this);
     }
 
     @Override
     public int executeUpdate() throws SQLException {
-    	lastExecuteType = StatementExecuteType.ExecuteUpdate;
-    	updateCount = createChain().preparedStatement_executeUpdate(this);
-    	return updateCount;
+        lastExecuteType = StatementExecuteType.ExecuteUpdate;
+        updateCount = createChain().preparedStatement_executeUpdate(this);
+        return updateCount;
     }
 
     @Override
@@ -133,14 +133,14 @@ public class PreparedStatementProxyImpl extends StatementProxyImpl implements Pr
     @Override
     public void setAsciiStream(int parameterIndex, InputStream x, int length) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(JdbcParameter.TYPE.AsciiInputStream, x, length));
-        
+
         createChain().preparedStatement_setAsciiStream(this, parameterIndex, x, length);
     }
 
     @Override
     public void setAsciiStream(int parameterIndex, InputStream x, long length) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(JdbcParameter.TYPE.AsciiInputStream, x, length));
-        
+
         createChain().preparedStatement_setAsciiStream(this, parameterIndex, x, length);
     }
 
@@ -153,35 +153,35 @@ public class PreparedStatementProxyImpl extends StatementProxyImpl implements Pr
     @Override
     public void setBinaryStream(int parameterIndex, InputStream x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(JdbcParameter.TYPE.BinaryInputStream, x));
-        
+
         createChain().preparedStatement_setBinaryStream(this, parameterIndex, x);
     }
 
     @Override
     public void setBinaryStream(int parameterIndex, InputStream x, int length) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(JdbcParameter.TYPE.BinaryInputStream, x, length));
-        
+
         createChain().preparedStatement_setBinaryStream(this, parameterIndex, x, length);
     }
 
     @Override
     public void setBinaryStream(int parameterIndex, InputStream x, long length) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(JdbcParameter.TYPE.BinaryInputStream, x, length));
-        
+
         createChain().preparedStatement_setBinaryStream(this, parameterIndex, x, length);
     }
 
     @Override
     public void setBlob(int parameterIndex, Blob x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.BLOB, x));
-        
+
         createChain().preparedStatement_setBlob(this, parameterIndex, x);
     }
 
     @Override
     public void setBlob(int parameterIndex, InputStream x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.BLOB, x));
-        
+
         createChain().preparedStatement_setBlob(this, parameterIndex, x);
     }
 
@@ -200,255 +200,255 @@ public class PreparedStatementProxyImpl extends StatementProxyImpl implements Pr
     @Override
     public void setByte(int parameterIndex, byte x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.TINYINT, x));
-        
+
         createChain().preparedStatement_setByte(this, parameterIndex, x);
     }
 
     @Override
     public void setBytes(int parameterIndex, byte[] x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(TYPE.BYTES, x));
-        
+
         createChain().preparedStatement_setBytes(this, parameterIndex, x);
     }
 
     @Override
     public void setCharacterStream(int parameterIndex, Reader x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(TYPE.CharacterInputStream, x));
-        
+
         createChain().preparedStatement_setCharacterStream(this, parameterIndex, x);
     }
 
     @Override
     public void setCharacterStream(int parameterIndex, Reader x, int length) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(TYPE.CharacterInputStream, x, length));
-        
+
         createChain().preparedStatement_setCharacterStream(this, parameterIndex, x, length);
     }
 
     @Override
     public void setCharacterStream(int parameterIndex, Reader x, long length) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(TYPE.CharacterInputStream, x, length));
-        
+
         createChain().preparedStatement_setCharacterStream(this, parameterIndex, x, length);
     }
 
     @Override
     public void setClob(int parameterIndex, Clob x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.CLOB, x));
-        
+
         createChain().preparedStatement_setClob(this, parameterIndex, x);
     }
 
     @Override
     public void setClob(int parameterIndex, Reader x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.CLOB, x));
-        
+
         createChain().preparedStatement_setClob(this, parameterIndex, x);
     }
 
     @Override
     public void setClob(int parameterIndex, Reader x, long length) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.CLOB, x, length));
-        
+
         createChain().preparedStatement_setClob(this, parameterIndex, x, length);
     }
 
     @Override
     public void setDate(int parameterIndex, Date x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.DATE, x));
-        
+
         createChain().preparedStatement_setDate(this, parameterIndex, x);
     }
 
     @Override
     public void setDate(int parameterIndex, Date x, Calendar cal) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.DATE, x, cal));
-        
+
         createChain().preparedStatement_setDate(this, parameterIndex, x, cal);
     }
 
     @Override
     public void setDouble(int parameterIndex, double x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.DOUBLE, x));
-        
+
         createChain().preparedStatement_setDouble(this, parameterIndex, x);
     }
 
     @Override
     public void setFloat(int parameterIndex, float x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.FLOAT, x));
-        
+
         createChain().preparedStatement_setFloat(this, parameterIndex, x);
     }
 
     @Override
     public void setInt(int parameterIndex, int x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.INTEGER, x));
-        
+
         createChain().preparedStatement_setInt(this, parameterIndex, x);
     }
 
     @Override
     public void setLong(int parameterIndex, long x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.BIGINT, x));
-        
+
         createChain().preparedStatement_setLong(this, parameterIndex, x);
     }
 
     @Override
     public void setNCharacterStream(int parameterIndex, Reader x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(TYPE.NCharacterInputStream, x));
-        
+
         createChain().preparedStatement_setNCharacterStream(this, parameterIndex, x);
     }
 
     @Override
     public void setNCharacterStream(int parameterIndex, Reader x, long length) throws SQLException {
-        setParameter(parameterIndex, new JdbcParameter(TYPE.NCharacterInputStream, x,length));
-        
+        setParameter(parameterIndex, new JdbcParameter(TYPE.NCharacterInputStream, x, length));
+
         createChain().preparedStatement_setNCharacterStream(this, parameterIndex, x, length);
     }
 
     @Override
     public void setNClob(int parameterIndex, NClob x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.NCLOB, x));
-        
+
         createChain().preparedStatement_setNClob(this, parameterIndex, x);
     }
 
     @Override
     public void setNClob(int parameterIndex, Reader x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.NCLOB, x));
-        
+
         createChain().preparedStatement_setNClob(this, parameterIndex, x);
     }
 
     @Override
     public void setNClob(int parameterIndex, Reader x, long length) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.NCLOB, x, length));
-        
+
         createChain().preparedStatement_setNClob(this, parameterIndex, x, length);
     }
 
     @Override
     public void setNString(int parameterIndex, String x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.NVARCHAR, x));
-        
+
         createChain().preparedStatement_setNString(this, parameterIndex, x);
     }
 
     @Override
     public void setNull(int parameterIndex, int sqlType) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(sqlType, null));
-        
+
         createChain().preparedStatement_setNull(this, parameterIndex, sqlType);
     }
 
     @Override
     public void setNull(int parameterIndex, int sqlType, String typeName) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(sqlType, null));
-        
+
         createChain().preparedStatement_setNull(this, parameterIndex, sqlType, typeName);
     }
 
     @Override
     public void setObject(int parameterIndex, Object x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.OTHER, null));
-        
+
         createChain().preparedStatement_setObject(this, parameterIndex, x);
     }
 
     @Override
     public void setObject(int parameterIndex, Object x, int targetSqlType) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(targetSqlType, x));
-        
+
         createChain().preparedStatement_setObject(this, parameterIndex, x, targetSqlType);
     }
 
     @Override
     public void setObject(int parameterIndex, Object x, int targetSqlType, int scaleOrLength) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(targetSqlType, x));
-        
+
         createChain().preparedStatement_setObject(this, parameterIndex, x, targetSqlType, scaleOrLength);
     }
 
     @Override
     public void setRef(int parameterIndex, Ref x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.REF, x));
-        
+
         createChain().preparedStatement_setRef(this, parameterIndex, x);
     }
 
     @Override
     public void setRowId(int parameterIndex, RowId x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.ROWID, x));
-        
+
         createChain().preparedStatement_setRowId(this, parameterIndex, x);
     }
 
     @Override
     public void setSQLXML(int parameterIndex, SQLXML x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.SQLXML, x));
-        
+
         createChain().preparedStatement_setSQLXML(this, parameterIndex, x);
     }
 
     @Override
     public void setShort(int parameterIndex, short x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.SMALLINT, x));
-        
+
         createChain().preparedStatement_setShort(this, parameterIndex, x);
     }
 
     @Override
     public void setString(int parameterIndex, String x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.VARCHAR, x));
-        
+
         createChain().preparedStatement_setString(this, parameterIndex, x);
     }
 
     @Override
     public void setTime(int parameterIndex, Time x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.TIME, x));
-        
+
         createChain().preparedStatement_setTime(this, parameterIndex, x);
     }
 
     @Override
     public void setTime(int parameterIndex, Time x, Calendar cal) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.TIME, x, cal));
-        
+
         createChain().preparedStatement_setTime(this, parameterIndex, x, cal);
     }
 
     @Override
     public void setTimestamp(int parameterIndex, Timestamp x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.TIMESTAMP, x));
-        
+
         createChain().preparedStatement_setTimestamp(this, parameterIndex, x);
     }
 
     @Override
     public void setTimestamp(int parameterIndex, Timestamp x, Calendar cal) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(Types.TIMESTAMP, x));
-        
+
         createChain().preparedStatement_setTimestamp(this, parameterIndex, x, cal);
     }
 
     @Override
     public void setURL(int parameterIndex, URL x) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(TYPE.URL, x));
-        
+
         createChain().preparedStatement_setURL(this, parameterIndex, x);
     }
 
     @Override
     public void setUnicodeStream(int parameterIndex, InputStream x, int length) throws SQLException {
         setParameter(parameterIndex, new JdbcParameter(TYPE.UnicodeStream, x, length));
-        
+
         createChain().preparedStatement_setUnicodeStream(this, parameterIndex, x, length);
     }
-    
+
     public void setParameter(int parameterIndex, JdbcParameter parameter) {
         this.getParameters().put(parameterIndex, parameter);
     }
@@ -466,9 +466,9 @@ public class PreparedStatementProxyImpl extends StatementProxyImpl implements Pr
 
         return super.unwrap(iface);
     }
-    
+
     public JdbcSqlStat getSqlStat() {
-        if (sqlStat.isRemoved()) {
+        if (sqlStat != null && sqlStat.isRemoved()) {
             JdbcSqlStat sqlStat = this.getConnectionProxy().getDirectDataSource().getDataSourceStat().getSqlStat(sql);
             sqlStat.setDbType(this.sqlStat.getDbType());
             this.sqlStat = sqlStat;
