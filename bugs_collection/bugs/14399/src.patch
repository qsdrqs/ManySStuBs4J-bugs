diff --git a/buggy/common/src/main/java/com/google/auto/common/BasicAnnotationProcessor.java b/fixed/common/src/main/java/com/google/auto/common/BasicAnnotationProcessor.java
index 104c74718..038b44844 100644
--- a/buggy/common/src/main/java/com/google/auto/common/BasicAnnotationProcessor.java
+++ b/fixed/common/src/main/java/com/google/auto/common/BasicAnnotationProcessor.java
@@ -326,7 +326,7 @@ public abstract class BasicAnnotationProcessor extends AbstractProcessor {
       if (stepElements.isEmpty()) {
         elementsDeferredBySteps.removeAll(step);
       } else {
-        Set<Element> rejectedElements = step.process(stepElements);
+        Set<? extends Element> rejectedElements = step.process(stepElements);
         elementsDeferredBySteps.replaceValues(
             step,
             transform(
@@ -429,13 +429,15 @@ public abstract class BasicAnnotationProcessor extends AbstractProcessor {
     Set<? extends Class<? extends Annotation>> annotations();
 
     /**
-     * The implementation of processing logic for the step. It is guaranteed that the keys in
-     * {@code elementsByAnnotation} will be a subset of the set returned by {@link #annotations()}.
+     * The implementation of processing logic for the step. It is guaranteed that the keys in {@code
+     * elementsByAnnotation} will be a subset of the set returned by {@link #annotations()}.
      *
-     * @return the elements that this step is unable to process, possibly until a later processing
-     *     round. These elements will be passed back to this step at the next round of processing.
+     * @return the elements (a subset of the values of {@code elementsByAnnotation}) that this step
+     *     is unable to process, possibly until a later processing round. These elements will be
+     *     passed back to this step at the next round of processing.
      */
-    Set<Element> process(SetMultimap<Class<? extends Annotation>, Element> elementsByAnnotation);
+    Set<? extends Element> process(
+        SetMultimap<Class<? extends Annotation>, Element> elementsByAnnotation);
   }
 
   /**
