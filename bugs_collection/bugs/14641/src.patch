diff --git a/buggy/test/com/google/javascript/jscomp/IntegrationTest.java b/fixed/test/com/google/javascript/jscomp/IntegrationTest.java
index a8104492a..fa0fb7cc3 100644
--- a/buggy/test/com/google/javascript/jscomp/IntegrationTest.java
+++ b/fixed/test/com/google/javascript/jscomp/IntegrationTest.java
@@ -2864,15 +2864,14 @@ public final class IntegrationTest extends IntegrationTestCase {
     options.setCheckSymbols(false);
     options.setCheckTypes(false);
     String code =
-        "isFunction = function(functionToCheck) {" +
-        "  var getType = {};" +
-        "  return functionToCheck && " +
-        "      getType.toString.apply(functionToCheck) === " +
-        "     '[object Function]';" +
-        "};";
+        LINE_JOINER.join(
+            "isFunction = function(functionToCheck) {",
+            "  var getType = {};",
+            "  return functionToCheck && ",
+            "      getType.toString.apply(functionToCheck) === '[object Function]';",
+            "};");
     String result =
-        "isFunction=function(a){var b={};" +
-        "return a&&\"[object Function]\"===b.b.a(a)}";
+        "isFunction = function(a){ var b={}; return a && '[object Function]' === b.b.a(a); }";
 
     test(options, code, result);
   }
@@ -4045,18 +4044,22 @@ public final class IntegrationTest extends IntegrationTestCase {
 
     // property name preserved due to export
     test(options, code,
-        "alert((new function(){this.abc = 1}).abc + " +
-            "(new function(){this.abc = 1}).abc);");
+        "alert((new function(){this.abc = 1}).abc + (new function(){this.abc = 1}).abc);");
 
     // unreferenced property not removed due to export.
-    test(options, "" +
-        "/** @constructor */ var X = function() {" +
-        "/** @export */ this.abc = 1;};\n" +
-        "/** @constructor */ var Y = function() {" +
-        "/** @export */ this.abc = 1;};\n" +
-        "alert(new X() + new Y());",
-        "alert((new function(){this.abc = 1}) + " +
-            "(new function(){this.abc = 1}));");
+    test(
+        options,
+        LINE_JOINER.join(
+            "/** @constructor */ var X = function() {",
+            "  /** @export */ this.abc = 1;",
+            "};",
+            "",
+            "/** @constructor */ var Y = function() {",
+            "  /** @export */ this.abc = 1;",
+            "};",
+            "",
+            "alert(new X() + new Y());"),
+        "alert((new function(){this.abc = 1}) + (new function(){this.abc = 1}));");
 
     // disambiguate and ambiguate properties respect the exports.
     options.setCheckTypes(true);
@@ -4064,9 +4067,10 @@ public final class IntegrationTest extends IntegrationTestCase {
     options.setAmbiguateProperties(true);
     options.propertyInvalidationErrors = ImmutableMap.of("abc", CheckLevel.ERROR);
 
-    test(options, code,
-        "alert((new function(){this.abc = 1}).abc + " +
-            "(new function(){this.abc = 1}).abc);");
+    test(
+        options,
+        code,
+        "alert((new function(){this.abc = 1}).abc + (new function(){this.abc = 1}).abc);");
 
     // unreferenced property not removed due to export.
     test(
