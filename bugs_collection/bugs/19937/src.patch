diff --git a/buggy/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java b/fixed/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java
index 1977e9d57..7a7990aa3 100644
--- a/buggy/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java
+++ b/fixed/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java
@@ -574,35 +574,33 @@ public class CompositeByteBuf extends AbstractByteBuf {
 
         dst.writerIndex(dst.capacity());
     }
-    
+
     /**
-     * Gets the {@link ByteBuf} used at the specified index.
+     * Gets the {@link ByteBuf} portion of this {@link CompositeByteBuf} that
+     * contains the specified {@code index}. This is an expert method!
+     *
      * <p>
      * Please note that since a {@link CompositeByteBuf} is made up of
      * multiple {@link ByteBuf}s, this does <em>not</em> return the full buffer.
      * Instead, it only returns a portion of the composite buffer where the
      * index is located
      * </p>
-     * 
-     * <p>
-     * This is a method meant for use by <em>experts</em> - Please be careful
-     * when using it.
-     * </p>
-     * 
-     * @param index The index to use
-     * @return The {@link ByteBuf} used at the indes.
-     * @throws IndexOutOfBoundsException 
+     *
+     * @param index The {@code index} to search for and include in the returned {@link ByteBuf}
+     * @return The {@link ByteBuf} that contains the specified {@code index}
+     * @throws IndexOutOfBoundsException when the specified {@code index} is less than
+     * zero, or larger than {@code capacity()}
      */
     public ByteBuf getBufferFor(int index) throws IndexOutOfBoundsException {
         if (index < 0 || index > capacity()) {
             throw new IndexOutOfBoundsException("Invalid index: " + index
-                    + " - Bytes needed: " + (index) + ", maximum is "
+                    + " - Bytes needed: " + index + ", maximum is "
                     + capacity());
         }
 
         //Return the component byte buffer
         return components[componentId(index)];
-        
+
     }
 
     @Override
