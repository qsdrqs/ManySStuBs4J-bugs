diff --git a/buggy/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BindValidationFailureAnalyzerTests.java b/fixed/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BindValidationFailureAnalyzerTests.java
index 6612138ca..008e572cd 100644
--- a/buggy/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BindValidationFailureAnalyzerTests.java
+++ b/fixed/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BindValidationFailureAnalyzerTests.java
@@ -66,11 +66,11 @@ public class BindValidationFailureAnalyzerTests {
 		FailureAnalysis analysis = performAnalysis(
 				FieldValidationFailureConfiguration.class);
 		assertThat(analysis.getDescription())
-				.contains(failure("test.foo.foo", "null", "may not be null"));
+				.contains(failure("test.foo.foo", "null", "must not be null"));
 		assertThat(analysis.getDescription())
 				.contains(failure("test.foo.value", "0", "at least five"));
 		assertThat(analysis.getDescription())
-				.contains(failure("test.foo.nested.bar", "null", "may not be null"));
+				.contains(failure("test.foo.nested.bar", "null", "must not be null"));
 	}
 
 	@Test
@@ -93,13 +93,13 @@ public class BindValidationFailureAnalyzerTests {
 	public void otherBindExceptionShouldReturnAnalysis() throws Exception {
 		BindException cause = new BindException(new FieldValidationFailureProperties(),
 				"fieldValidationFailureProperties");
-		cause.addError(new FieldError("test", "value", "may not be null"));
+		cause.addError(new FieldError("test", "value", "must not be null"));
 		BeanCreationException rootFailure = new BeanCreationException(
 				"bean creation failure", cause);
 		FailureAnalysis analysis = new BindValidationFailureAnalyzer()
 				.analyze(rootFailure, rootFailure);
 		assertThat(analysis.getDescription())
-				.contains(failure("test.value", "null", "may not be null"));
+				.contains(failure("test.value", "null", "must not be null"));
 	}
 
 	private static String failure(String property, String value, String reason) {
